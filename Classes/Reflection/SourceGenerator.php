<?php

/**
 * Abstract class for PHP code generation
 *
 * This file is part of the Morpheus Framework.
 *
 * @copyright Copyright (c) 2011 Pavel Lang (langpavel at gmail dot com)
 * @license This source file is subject to the Morpheus/LGPL license.
 */

require_once('../Morpheus.php');

class SourceGeneratorException extends MorpheusException {}

/**
 * Abstract class for PHP code generator tools
 *
 * @author langpavel
 */
abstract class SourceGenerator extends SafeObject
{
	private $source = '';
	private $indent = 0;

	/**
	 * Write text to output with respect to indentation level
	 *
	 * @param string $text
	 */
	protected function write($text)
	{
		if($this->indent == 0)
			$this->source .= $text;
		else
			$this->source .= str_replace("\n", "\n".str_repeat("\t", $this->indent), $text);
	}

	/**
	 * Write text to output with respect to indentation level and begin newline
	 *
	 * @param string $text
	 */
	protected function writeLn($text = '')
	{
		$this->write($text . "\n");
	}

	/**
	 * Enter PHP mode (emits '&lt;?php')
	 */
	protected function writePHPOpenTag()
	{
		$this->writeLn('<?php');
	}

	/**
	 * Write PHP comment header
	 *
	 * @param string $tool_name
	 * @see SourceGenerator::beginSourceFile()
	 */
	protected function writeGeneratedFileWarning($tool_name = null)
	{
		if($tool_name === null)
			$tool_name = get_class($this);
		$this->write('
/**
 * This file was generated by tool '.$tool_name.' from the Morpheus Framework.
 *
 * @copyright Copyright (c) 2011 Pavel Lang (langpavel at gmail dot com)
 * @license This source file is subject to the Morpheus/LGPL license.
 */

/***********************************************************************************
 *  WARNING   WARNING   WARNING   WARNING   WARNING   WARNING   WARNING   WARNING  *
 ***********************************************************************************
 * This file is generated by a tool "'.$tool_name.'".
 * DO NOT MODIFY THIS FILE BY HAND, use '.$tool_name.' tool instead
 ***********************************************************************************/
');
	}

	/**
	 * Start PHP mode and write comment header
	 *
	 * @param string[optional] $tool_name
	 */
	protected function beginSourceFile($tool_name = null)
	{
		$this->writePHPOpenTag();
		$this->writeGeneratedFileWarning($tool_name);
	}

	/**
	 * Increase indentation level
	 */
	protected function Indent()
	{
		$this->indent++;
	}

	/**
	 * Decrease indentation level
	 */
	protected function Unindent()
	{
		$this->indent--;
	}

	/**
	 * returns generated result as string
	 */
	public function getSource()
	{
		return $this->source;
	}

	/**
	 * Write result to file $filename
	 *
	 * @param string $filename
	 * @param bool[optional] $rename_old
	 * @param bool[optional] $compare
	 * @throws SourceGeneratorException
	 */
	public function writeFile($filename, $rename_old = true, $compare = true, $raise_error = true)
	{
		$source = $this->getSource();
		if($rename_old && is_file($filename))
		{
			if($compare && (file_get_contents($filename) == $source))
				return true;

			$i = 0;
			do
			{
				$newfilename = $filename.sprintf('.%04d.bak',$i);
				$i++;
			}
			while(is_file($newfilename));
			if(!rename($filename, $newfilename))
			{
				if($raise_error)
					throw new SourceGeneratorException('Cannot rename file "'.$filename.'" to "'.$newfilename.'"');
				else
					return false;
			}
		}
		if(@file_put_contents($filename, $source) === false)
		{
			if($raise_error)
				throw new SourceGeneratorException('Cannot write file "'.$filename.'"');
			else
				return false;
		}
		return $filename;
	}

	public function __toString()
	{
		return $this->getSource();
	}
}
